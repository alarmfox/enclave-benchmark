name: Build and run tests

on:
  push:
    paths-ignore:
      - 'docs/**'
      - '*.md'
      - ./.github/workflows/docs.yml
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '*.md'
      - ./.github/workflows/docs.yml

jobs:
  build:
    name: build
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Check
      run: cargo check --verbose

    - name: Build
      run: cargo build --verbose

    - uses: Swatinem/rust-cache@v2
    - uses: dtolnay/rust-toolchain@master
      with:
        toolchain: stable
        components: clippy, rustfmt

    - name: Run clippy and format
      run: |
        rustup component add clippy rustfmt 2> /dev/null
        cargo fmt --all -- --check
        cargo clippy --all -- -D warnings

  test:
    name: test
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Setup host dependency
      run: |
        sudo apt-get update && sudo apt-get install -y \
          libbpf1 \
          clang \
          llvm-dev

    - uses: actions/cache@v4
      id: cache-docker-image
      with:
        path: /tmp/.docker-cache
        key: ${{ runner.os }}-${{ hashFiles('Dockerfile') }}
        restore-keys: |
          ${{ runner.os }}-

    - name: Load Docker image from cache
      if: steps.cache-docker-image.outputs.cache-hit == 'true'
      run: |
        docker load -i /tmp/.docker-cache/gramine-profile.tar

    - name: Build Docker image
      if: steps.cache-docker-image.outputs.cache-hit != 'true'
      run: |
        docker build -t gramine-profile .
        mkdir -p /tmp/.docker-cache
        docker save gramine-profile -o /tmp/.docker-cache/gramine-profile.tar

    - name: Run tests
      run: |
        docker run --privileged \
        -v $(pwd):/workspace/benchmark \
        -w /workspace/benchmark \
        gramine-profile \
        /bin/sh -c "mount -o debugfs none /sys/kernel/debug/; cargo test --verbose"
